# Dockerfile usando corepack para Yarn (forma mais moderna)
FROM python:3.11-slim AS builder

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# ===========================================
# INSTALAR YARN VIA COREPACK (NODE.JS 16.10+)
# ===========================================

# Instalar Node.js 18+ (que inclui corepack)
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Habilitar corepack e instalar Yarn
RUN corepack enable \
    && corepack prepare yarn@stable --activate

# Configurar diretório de trabalho
WORKDIR /app

# Copiar requirements primeiro (para cache de layers)
COPY python/life-tracker/agent-onboarding/requirements.txt /app/requirements.txt

# Instalar dependências Python
RUN pip install --no-cache-dir -r /app/requirements.txt

# ===========================================
# RUNTIME STAGE
# ===========================================
FROM python:3.11-slim AS runtime

# Instalar curl para health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Criar usuário não-root
RUN groupadd -r python && useradd -r -g python python

# Configurar diretório de trabalho
WORKDIR /app

# Copiar dependências instaladas
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copiar Node.js e corepack do builder
COPY --from=builder /usr/bin/node /usr/bin/node
COPY --from=builder /usr/bin/corepack /usr/bin/corepack
COPY --from=builder /usr/local/bin/yarn /usr/local/bin/yarn

# Copiar código fonte do projeto
COPY python/life-tracker/agent-onboarding/ /app/

# Mudar permissões
RUN chown -R python:python /app

# Mudar para usuário não-root
USER python

# Expor porta
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://0.0.0.0:8000/health || exit 1

# Comando de inicialização
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
