// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.systentando.com.br/support",
            "email": "support@systentando.com.br"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/analysis/market": {
            "get": {
                "description": "Get current market analysis and trends",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Get market analysis",
                "parameters": [
                    {
                        "enum": [
                            "daily",
                            "weekly",
                            "monthly",
                            "yearly"
                        ],
                        "type": "string",
                        "default": "daily",
                        "description": "Analysis timeframe",
                        "name": "timeframe",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Asset type filter",
                        "name": "asset_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Market analysis data",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.MarketAnalysis"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/analysis/opportunities": {
            "get": {
                "description": "Get a list of investment opportunities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Get investment opportunities",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "active",
                            "expired",
                            "closed"
                        ],
                        "type": "string",
                        "description": "Opportunity status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "type": "string",
                        "description": "Risk level",
                        "name": "risk_level",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of opportunities",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new investment opportunity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Create investment opportunity",
                "parameters": [
                    {
                        "description": "Opportunity data",
                        "name": "opportunity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.Opportunity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created opportunity",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.Opportunity"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/analysis/opportunities/{id}": {
            "get": {
                "description": "Get a specific opportunity by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Get opportunity by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Opportunity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Opportunity details",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.Opportunity"
                        }
                    },
                    "404": {
                        "description": "Opportunity not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing opportunity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Update opportunity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Opportunity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Opportunity data",
                        "name": "opportunity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.Opportunity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated opportunity",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.Opportunity"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Opportunity not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an opportunity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Delete opportunity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Opportunity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Opportunity deleted successfully"
                    },
                    "404": {
                        "description": "Opportunity not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/analysis/strategies": {
            "get": {
                "description": "Get available analysis strategies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Get analysis strategies",
                "responses": {
                    "200": {
                        "description": "List of strategies",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/analysis/strategies/analyze": {
            "post": {
                "description": "Analyze a specific investment strategy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Analyze investment strategy",
                "parameters": [
                    {
                        "description": "Strategy parameters",
                        "name": "strategy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Analysis results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/assets": {
            "get": {
                "description": "Get a list of all assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get all assets",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Asset type (stock, crypto, bond, etc.)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of assets",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new asset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Create new asset",
                "parameters": [
                    {
                        "description": "Asset data",
                        "name": "asset",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created asset",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/assets/search": {
            "get": {
                "description": "Search assets by query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Search assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Asset type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Exchange",
                        "name": "exchange",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/assets/{id}": {
            "get": {
                "description": "Get a specific asset by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Get asset by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Asset details",
                        "schema": {}
                    },
                    "404": {
                        "description": "Asset not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing asset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Update asset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Asset data",
                        "name": "asset",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated asset",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Asset not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an asset by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assets"
                ],
                "summary": "Delete asset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Asset deleted successfully"
                    },
                    "404": {
                        "description": "Asset not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "description": "Get a list of all notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Get all notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "alert",
                            "reminder",
                            "update",
                            "system"
                        ],
                        "type": "string",
                        "description": "Notification type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "read",
                            "unread",
                            "all"
                        ],
                        "type": "string",
                        "description": "Notification status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notifications",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Create new notification",
                "parameters": [
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_notification_entity.Notification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created notification",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_notification_entity.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/notifications/user/{user_id}": {
            "get": {
                "description": "Get notifications for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Get user notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "read",
                            "unread",
                            "all"
                        ],
                        "type": "string",
                        "description": "Notification status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User notifications",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/notifications/{id}": {
            "get": {
                "description": "Get a specific notification by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Get notification by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification details",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_notification_entity.Notification"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Update notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification data",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_notification_entity.Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated notification",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_notification_entity.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a notification by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Delete notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Notification deleted successfully"
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/notifications/{id}/read": {
            "put": {
                "description": "Mark a notification as read",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Mark notification as read",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/notifications/{id}/unread": {
            "put": {
                "description": "Mark a notification as unread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Mark notification as unread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as unread",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/simulations": {
            "get": {
                "description": "Get a list of all simulations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "simulations"
                ],
                "summary": "Get all simulations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "running",
                            "completed",
                            "failed"
                        ],
                        "type": "string",
                        "description": "Simulation status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of simulations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new investment simulation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "simulations"
                ],
                "summary": "Create new simulation",
                "parameters": [
                    {
                        "description": "Simulation data",
                        "name": "simulation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.Simulation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created simulation",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.Simulation"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/simulations/run": {
            "post": {
                "description": "Execute a simulation with given parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "simulations"
                ],
                "summary": "Run simulation",
                "parameters": [
                    {
                        "description": "Simulation parameters",
                        "name": "simulation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simulation execution results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/simulations/{id}": {
            "get": {
                "description": "Get a specific simulation by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "simulations"
                ],
                "summary": "Get simulation by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Simulation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simulation details",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.Simulation"
                        }
                    },
                    "404": {
                        "description": "Simulation not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing simulation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "simulations"
                ],
                "summary": "Update simulation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Simulation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Simulation data",
                        "name": "simulation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.Simulation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated simulation",
                        "schema": {
                            "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.Simulation"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Simulation not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a simulation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "simulations"
                ],
                "summary": "Delete simulation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Simulation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Simulation deleted successfully"
                    },
                    "404": {
                        "description": "Simulation not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/simulations/{id}/results": {
            "get": {
                "description": "Get results of a specific simulation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "simulations"
                ],
                "summary": "Get simulation results",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Simulation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Simulation results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Simulation not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.InvestmentStrategy": {
            "type": "string",
            "enum": [
                "value",
                "growth",
                "dividend",
                "trend",
                "momentum",
                "dca",
                "swing",
                "diversification"
            ],
            "x-enum-comments": {
                "StrategyDCA": "Dollar-cost averaging",
                "StrategyDiversification": "Diversificação",
                "StrategyDividend": "Investimento em dividendos",
                "StrategyGrowth": "Investimento em crescimento",
                "StrategyMomentum": "Análise de momentum",
                "StrategySwingTrading": "Swing trading",
                "StrategyTrend": "Análise de tendências",
                "StrategyValue": "Investimento em valor"
            },
            "x-enum-descriptions": [
                "Investimento em valor",
                "Investimento em crescimento",
                "Investimento em dividendos",
                "Análise de tendências",
                "Análise de momentum",
                "Dollar-cost averaging",
                "Swing trading",
                "Diversificação"
            ],
            "x-enum-varnames": [
                "StrategyValue",
                "StrategyGrowth",
                "StrategyDividend",
                "StrategyTrend",
                "StrategyMomentum",
                "StrategyDCA",
                "StrategySwingTrading",
                "StrategyDiversification"
            ]
        },
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.MarketAnalysis": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.Opportunity": {
            "type": "object",
            "properties": {
                "asset": {},
                "confidence": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expected_return": {
                    "type": "number"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "risk_level": {
                    "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.RiskLevel"
                },
                "status": {
                    "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.OpportunityStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.OpportunityStatus": {
            "type": "string",
            "enum": [
                "active",
                "expired",
                "closed"
            ],
            "x-enum-varnames": [
                "OpportunityStatusActive",
                "OpportunityStatusExpired",
                "OpportunityStatusClosed"
            ]
        },
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.RiskLevel": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high"
            ],
            "x-enum-comments": {
                "RiskHigh": "Alto risco",
                "RiskLow": "Baixo risco",
                "RiskMedium": "Médio risco"
            },
            "x-enum-descriptions": [
                "Baixo risco",
                "Médio risco",
                "Alto risco"
            ],
            "x-enum-varnames": [
                "RiskLow",
                "RiskMedium",
                "RiskHigh"
            ]
        },
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_notification_entity.Notification": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "read": {
                    "type": "boolean"
                },
                "readAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.Simulation": {
            "type": "object",
            "properties": {
                "asset": {},
                "completedAt": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "entryPrice": {
                    "type": "number"
                },
                "errorMessage": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "initialAmount": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.SimulationResult"
                    }
                },
                "scenarios": {
                    "description": "Variações percentuais",
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "status": {
                    "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.SimulationStatus"
                },
                "stopLoss": {
                    "type": "number"
                },
                "strategy": {
                    "$ref": "#/definitions/github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_analysis_entity.InvestmentStrategy"
                },
                "targetPrice": {
                    "type": "number"
                },
                "timeHorizon": {
                    "description": "Em dias",
                    "type": "integer"
                }
            }
        },
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.SimulationResult": {
            "type": "object",
            "properties": {
                "annualizedROI": {
                    "type": "number"
                },
                "finalAmount": {
                    "type": "number"
                },
                "finalPrice": {
                    "type": "number"
                },
                "profitLoss": {
                    "type": "number"
                },
                "profitLossPerc": {
                    "type": "number"
                },
                "scenarioChange": {
                    "description": "Percentual",
                    "type": "number"
                }
            }
        },
        "github_com_systentandobr_backend-monorepo_golang_invest-tracker_internal_domain_simulation_entity.SimulationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "running",
                "complete",
                "failed"
            ],
            "x-enum-comments": {
                "SimulationComplete": "Simulação concluída",
                "SimulationFailed": "Simulação falhou",
                "SimulationPending": "Simulação pendente",
                "SimulationRunning": "Simulação em execução"
            },
            "x-enum-descriptions": [
                "Simulação pendente",
                "Simulação em execução",
                "Simulação concluída",
                "Simulação falhou"
            ],
            "x-enum-varnames": [
                "SimulationPending",
                "SimulationRunning",
                "SimulationComplete",
                "SimulationFailed"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:7777",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Investment Tracker API",
	Description:      "API for tracking and analyzing investments across different asset types",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
